from django.db import models
from django.conf import settings
from transformers import pipeline

# Create your models here.
class LogEntry(models.Model):
    title = models.CharField(max_length=100)
    content = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)
    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name='logOfUser')
    updated_at = models.DateTimeField(auto_now=True)

    # Sentiment
    mood = models.CharField(max_length=50, blank=True)

    # Text Analysis
    keywords = models.TextField(blank=True)
    summary = models.TextField(blank=True)

    # User Interaction
    views_count = models.IntegerField(default=0)

    class Meta:
        verbose_name_plural = "LogEntries"

    def __str__(self):
        return self.title
    
    # Create Automatic Summary generated by ML Model
    def save(self, *args, **kwargs):
        # Check if content is not empty and no summary exists yet
        if self.content and len(self.content)>50 and not self.summary:
            # Initialize Hugging Face summarization pipeline
            summarizer = pipeline("summarization", model="divyesh1099/daily_logs_summariser_model")
            # Generate summary with appropriate length limits
            # Note: Adjust max_length and min_length as per your needs
            summary_result = summarizer(self.content, max_length=130, min_length=30, do_sample=False)
            # Save generated summary to the model
            self.summary = summary_result[0]['summary_text']
        # Call the "real" save() method
        super(LogEntry, self).save(*args, **kwargs)